# Sistema Bancário simples com funções para operações básicas

def criar_usuario(usuarios, id_usuario, nome):
    if id_usuario in usuarios:
        print("Usuário já cadastrado.")
        return False
    usuarios[id_usuario] = nome
    print(f"Usuário {nome} cadastrado com sucesso.")
    return True

def criar_conta(agencia, contas, usuarios, id_usuario):
    if id_usuario not in usuarios:
        print("Usuário não cadastrado! Não é possível criar conta.")
        return None
    numero_conta = len(contas) + 1  # Número sequencial simples
    contas[numero_conta] = {
        "agencia": agencia,
        "usuario": usuarios[id_usuario],
        "saldo": 0.0,
        "extrato": [],
        "saques_realizados": 0
    }
    print(f"Conta número {numero_conta} criada para {usuarios[id_usuario]}")
    return numero_conta

def depositar(contas, numero_conta, valor):
    if valor <= 0:
        print("Valor inválido para depósito.")
        return
    contas[numero_conta]["saldo"] += valor
    contas[numero_conta]["extrato"].append(f"Depósito: R$ {valor:.2f}")
    print(f"Depósito de R$ {valor:.2f} realizado com sucesso.")

def sacar(contas, numero_conta, valor, limite=500, limite_saques=3):
    if valor <= 0:
        print("Valor inválido para saque.")
        return
    saldo = contas[numero_conta]["saldo"]
    saques_realizados = contas[numero_conta]["saques_realizados"]

    if valor > saldo:
        print("Saldo insuficiente.")
        return
    if valor > limite:
        print(f"Saque acima do limite permitido de R$ {limite:.2f}.")
        return
    if saques_realizados >= limite_saques:
        print("Limite diário de saques atingido.")
        return

    contas[numero_conta]["saldo"] -= valor
    contas[numero_conta]["extrato"].append(f"Saque: R$ {valor:.2f}")
    contas[numero_conta]["saques_realizados"] += 1
    print(f"Saque de R$ {valor:.2f} realizado com sucesso.")

def mostrar_extrato(contas, numero_conta):
    print("\n======= EXTRATO =======")
    if not contas[numero_conta]["extrato"]:
        print("Nenhuma movimentação realizada.")
    else:
        for item in contas[numero_conta]["extrato"]:
            print(item)
    print(f"Saldo atual: R$ {contas[numero_conta]['saldo']:.2f}")
    print("=======================\n")

def resetar_saques(contas):
    # Reseta contador de saques para cada conta (podemos chamar isso no início do dia, por exemplo)
    for conta in contas.values():
        conta["saques_realizados"] = 0

# Exemplo de uso

def main():
    usuarios = {}
    contas = {}
    agencia_padrao = "0001"

    # Cadastro de usuários
    criar_usuario(usuarios, 1, "João")
    criar_usuario(usuarios, 2, "Maria")

    # Criar contas
    conta_joao = criar_conta(agencia_padrao, contas, usuarios, 1)
    conta_maria = criar_conta(agencia_padrao, contas, usuarios, 2)

    # Operações
    depositar(contas, conta_joao, 1000)
    depositar(contas, conta_maria, 1500)

    sacar(contas, conta_joao, 300)
    sacar(contas, conta_joao, 250)
    sacar(contas, conta_joao, 100)
    sacar(contas, conta_joao, 50)  # Deve avisar limite de saques atingido

    mostrar_extrato(contas, conta_joao)
    mostrar_extrato(contas, conta_maria)

if __name__ == "__main__":
    main()
